<?xml version='1.0' encoding='UTF-8'?>
<section version="5.0"
    xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd"
    xmlns="http://docbook.org/ns/docbook" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xl="http://www.w3.org/1999/xlink"
    xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xhtml="http://www.w3.org/1999/xhtml"
    xmlns:svg="http://www.w3.org/2000/svg" xmlns:mth="http://www.w3.org/1998/Math/MathML"
    xmlns:db="http://docbook.org/ns/docbook" xml:id="program_indicator_functions_variables_operators">
    <title>Reference information: functions, variables and operators to use in program indicator
        expressions and filters</title>
    <para>
        <example>
            <para>An expression that includes both attributes, data elements and constants looks
                like
                this:<screen>(A{GPkGfbmArby} + #{mCXR7u4kNBW.NFkjsNiQ9PH}) * C{bCqvfPR02Im}</screen></para>
        </example>
    </para>
    <para>
        <example>
            <para>An expression which uses the custom aggregation type and hence can use inline
                aggregation types looks like
                this:<screen>(sum(#{mCXR7u4kNBW.K0A4BauXJDl} * #{mCXR7u4kNBW.NFkjsNiQ9PH}) / sum(#{mCXR7u4kNBW.NFkjsNiQ9PH})) * 100</screen></para>
            <para>Note how the "sum" aggregation operator is used inside the expression
                itself.</para>
        </example>
    </para>
    <section>
        <title>Functions to use in a program indicator expression or filter</title>
        <para>The program indicator expression and filter support a range of functions. The
            functions can be applied to data elements and attributes:</para>
        <table frame="all">
            <title>Functions to use in a program indicator expression or filter</title>
            <tgroup cols="3">
                <colspec colnum="1" colname="c1" colwidth="1*"/>
                <colspec colnum="2" colname="newCol2" colwidth="2*"/>
                <colspec colnum="3" colname="c2" colwidth="3.61*"/>
                <thead>
                    <row>
                        <entry align="left" valign="top">
                            <para>Function</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Arguments</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Description</para>
                        </entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry align="left" valign="top">
                            <para>d2:hasValue</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>(object)</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Returns true if the data element/attribute has a value. Can be
                                used in filters to distinguish between the number 0 and no value,
                                and to distinguish between exlicit "No" and no selection for a
                                Yes/No field.</para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>d2:daysBetween</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>(date, date)</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Produces the number of days between two data elements/attributes
                                of type date. The static date format is
                                &apos;yyyy-MM-dd&apos;.</para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>d2:weeksBetween</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>(date, date)</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Produces the number of full weeks between two data
                                elements/attributes of type date. The static date format is
                                &apos;yyyy-MM-dd&apos;.</para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>d2:monthsBetween</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>(date, date)</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Produces the number of full months between two data
                                elements/attributes of type date. The static date format is
                                &apos;yyyy-MM-dd&apos;.</para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>d2:yearsBetween</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>(date, date)</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Produces the number of full years between two data
                                elements/attributes of type date. The static date format is
                                &apos;yyyy-MM-dd&apos;.</para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>d2:condition</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>(boolean-expr, true-val, false-val)</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Evaluates the conditional expression and if true returns the true
                                value, if false returns the false value. The conditional expression
                                must be quoted.</para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>d2:zing</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>(number)</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Evaluates the data element/attribute of type number to zero if the
                                value is negative, otherwise to the value itself.</para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>d2:oizp</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>(number)</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Evaluates the data element/attribute of type number to one if the
                                value is zero or positive, otherwise to zero. </para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>d2:zpvc</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>(object, [,object, object,...])</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Returns the number of numeric zero and positive values among the
                                given object arguments. Can be provided any number of
                                arguments.</para>
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
        <para>
            <example>
                <para>A filter that uses the &quot;hasValue&quot; function looks like this:
                    this:<screen>d2:hasValue(#{mCXR7u4kNBW.NFkjsNiQ9PH})</screen></para>
            </example>
        </para>
        <para>
            <example>
                <para>An expression that uses the &quot;zing&quot; and &quot;oizp&quot; functions
                    looks like
                    this:<screen>d2:zing(A{GPkGfbmArby}) + d2:oizp(#{mCXR7u4kNBW.NFkjsNiQ9PH}))</screen></para>
            </example>
        </para>
        <para>
            <example>
                <para>An expression that uses the &quot;daysBetween&quot; function looks like
                    this:<screen>d2:daysBetween(#{mCXR7u4kNBW.k8ja2Aif1Ae},&apos;2015-06-01&apos;)</screen></para>
            </example>
        </para>
        <para>
            <example>
                <para>An expression that uses the &quot;condition&quot; function looks like
                    this:<screen>d2:condition(&apos;#{mCXR7u4kNBW.NFkjsNiQ9PH} &gt; 100&apos;,150,50)</screen></para>
            </example>
        </para>
        <para>
            <example>
                <para>An expression that uses the &quot;zpvc&quot; function looks like
                    this:<screen>d2:zpvc(A{GPkGfbmArby}),#{mCXR7u4kNBW.NFkjsNiQ9PH}),4,-1)</screen></para>
            </example>
        </para>
    </section>
    <section>
        <title>Variables to use in a program indicator expression or filter</title>
        <para>The program indicator expression and filter support a range of variables:</para>
        <table frame="all">
            <title>Variables to use in a program indicator expression or filter</title>
            <tgroup cols="2">
                <colspec colnum="1" colname="c1" colwidth="1*"/>
                <colspec colnum="2" colname="c2" colwidth="3.55*"/>
                <thead>
                    <row>
                        <entry align="left" valign="top">
                            <para>Variable</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Description</para>
                        </entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry align="left" valign="top">
                            <para>event_date</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>The date of when the event took place.</para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>due_date</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>The date of when an event is due.</para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>incident_date</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>The date of the incidence of the event.</para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>enrollment_date</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>The date of when the tracked entity instance was enrolled in the
                                program.</para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>current_date</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>The current date.</para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>value_count</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>The number of non-null values in the expression part of the
                                event.</para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>zero_pos_value_count</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>The number of numeric positive values in the expression part of
                                the event.</para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>event_count</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>The count of events (useful in combination with filters).</para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>enrollment_count</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>The count of enrollments (useful in combination with
                                filters).</para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>tei_count</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>The count of tracked entity instances (useful in combination with
                                filters).</para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>program_stage_name</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Can be used in filters for including only certain program stages
                                in a filter for tracker programs. Uses the name of the program
                                stage: </para>
                            <para>
                                <screen>V{program_stage_name} == 'ANC first visit'</screen>
                            </para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>program_stage_id</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Can be used in filters for including only certain program stages
                                in a filter for tracker programs. Uses the unique identifier of the
                                program stage: </para>
                            <para>
                                <screen>V{program_stage_id} == 'YPSSfbmAtt1'</screen>
                            </para>
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
        <para>
            <example>
                <para>An expression that uses the &quot;value count&quot; variable looks like
                    this:<screen>(#{A03MvHHogjR.a3kGcGDCuk6} + #{A03MvHHogjR.wQLfBvPrXqq}) / V{value_count}</screen></para>
            </example>
        </para>
        <para>
            <example>
                <para>An expression that uses the "event_date" and "incident_date" variables looks
                    like this:<screen>d2:daysBetween(V{incident_date},V{event_date})</screen>
                </para>
            </example>
        </para>
    </section>
    <section>
        <title>Operators to use in a program indicator filter</title>
        <table frame="all">
            <title>Operators to use in a program indicator filter</title>
            <tgroup cols="2">
                <colspec colnum="1" colname="c1" colwidth="1*"/>
                <colspec colnum="2" colname="c2" colwidth="5.11*"/>
                <thead>
                    <row>
                        <entry align="left" valign="top">
                            <para>Operator</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Description</para>
                        </entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry align="left" valign="top">
                            <para>and</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Logical AND</para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>or</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Logical OR</para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>==</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Equal to</para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>!=</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Not equal to</para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>&lt;</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Less than</para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>&lt;=</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Less than or equal to</para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>&gt;</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Greater than</para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>&gt;=</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Greater than or equal to</para>
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
        <para>These operators can be used to form logical expressions which ultimately evaluate to
            either true or false. For example you can assert that multiple data elements must be a
            specific value, or that specific attributes must have numerical values less or greater
            than a constant.</para>
        <para>
            <example>
                <para>A filter that uses both attributes and data elements looks like
                    this:<screen>A{cejWyOfXge6} == &apos;Female&apos; and #{A03MvHHogjR.a3kGcGDCuk6} &lt;= 2</screen></para>
            </example>
        </para>
        <tip>
            <para>DHIS2 is using the JEXL library for evaluating expressions which supports
                additional syntax beyond what is covered in this documentation. See the reference at
                the <link
                    xl:href="http://commons.apache.org/proper/commons-jexl/reference/syntax.html"
                    >project home page</link> to learn how you can create more sophisticated
                expressions</para>
        </tip>
    </section>
</section>
